//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComponentArt.Win.Demos.SalesDataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePeriod", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    public enum TimePeriod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Decade = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesRecord", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    [System.SerializableAttribute()]
    public partial class SalesRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InquiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((this.AccountsField.Equals(value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Inquiries {
            get {
                return this.InquiriesField;
            }
            set {
                if ((this.InquiriesField.Equals(value) != true)) {
                    this.InquiriesField = value;
                    this.RaisePropertyChanged("Inquiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sales {
            get {
                return this.SalesField;
            }
            set {
                if ((this.SalesField.Equals(value) != true)) {
                    this.SalesField = value;
                    this.RaisePropertyChanged("Sales");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringSalesRecord", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    [System.SerializableAttribute()]
    public partial class StringSalesRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InquiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((this.AccountsField.Equals(value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Inquiries {
            get {
                return this.InquiriesField;
            }
            set {
                if ((this.InquiriesField.Equals(value) != true)) {
                    this.InquiriesField = value;
                    this.RaisePropertyChanged("Inquiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sales {
            get {
                return this.SalesField;
            }
            set {
                if ((this.SalesField.Equals(value) != true)) {
                    this.SalesField = value;
                    this.RaisePropertyChanged("Sales");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSummary", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    [System.SerializableAttribute()]
    public partial class ProductSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DownloadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InquiriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SalesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Downloads {
            get {
                return this.DownloadsField;
            }
            set {
                if ((this.DownloadsField.Equals(value) != true)) {
                    this.DownloadsField = value;
                    this.RaisePropertyChanged("Downloads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Inquiries {
            get {
                return this.InquiriesField;
            }
            set {
                if ((this.InquiriesField.Equals(value) != true)) {
                    this.InquiriesField = value;
                    this.RaisePropertyChanged("Inquiries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sales {
            get {
                return this.SalesField;
            }
            set {
                if ((this.SalesField.Equals(value) != true)) {
                    this.SalesField = value;
                    this.RaisePropertyChanged("Sales");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DashboardData", Namespace="http://schemas.datacontract.org/2004/07/ComponentArt.Win.Demos.Web")]
    [System.SerializableAttribute()]
    public partial class DashboardData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ComponentArt.Win.Demos.SalesDataService.ProductSummary[] ProductSummaryDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ComponentArt.Win.Demos.SalesDataService.SalesRecord[] SalesDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accounts {
            get {
                return this.AccountsField;
            }
            set {
                if ((this.AccountsField.Equals(value) != true)) {
                    this.AccountsField = value;
                    this.RaisePropertyChanged("Accounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ComponentArt.Win.Demos.SalesDataService.ProductSummary[] ProductSummaryData {
            get {
                return this.ProductSummaryDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSummaryDataField, value) != true)) {
                    this.ProductSummaryDataField = value;
                    this.RaisePropertyChanged("ProductSummaryData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] SalesData {
            get {
                return this.SalesDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesDataField, value) != true)) {
                    this.SalesDataField = value;
                    this.RaisePropertyChanged("SalesData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="SalesDataService.SalesDataService")]
    public interface SalesDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetData", ReplyAction="urn:SalesDataService/GetDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetData", ReplyAction="urn:SalesDataService/GetDataResponse")]
        System.IAsyncResult BeginGetData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetAllData", ReplyAction="urn:SalesDataService/GetAllDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] GetAllData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetAllData", ReplyAction="urn:SalesDataService/GetAllDataResponse")]
        System.IAsyncResult BeginGetAllData(System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] EndGetAllData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetYearlyData", ReplyAction="urn:SalesDataService/GetYearlyDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyData(System.DateTime year);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetYearlyData", ReplyAction="urn:SalesDataService/GetYearlyDataResponse")]
        System.IAsyncResult BeginGetYearlyData(System.DateTime year, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetYearlyDataFromDecade", ReplyAction="urn:SalesDataService/GetYearlyDataFromDecadeResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyDataFromDecade(string decade);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetYearlyDataFromDecade", ReplyAction="urn:SalesDataService/GetYearlyDataFromDecadeResponse")]
        System.IAsyncResult BeginGetYearlyDataFromDecade(string decade, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyDataFromDecade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetMonthlyData", ReplyAction="urn:SalesDataService/GetMonthlyDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetMonthlyData(System.DateTime year);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetMonthlyData", ReplyAction="urn:SalesDataService/GetMonthlyDataResponse")]
        System.IAsyncResult BeginGetMonthlyData(System.DateTime year, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetMonthlyData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetDailyData", ReplyAction="urn:SalesDataService/GetDailyDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetDailyData(System.DateTime month);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetDailyData", ReplyAction="urn:SalesDataService/GetDailyDataResponse")]
        System.IAsyncResult BeginGetDailyData(System.DateTime month, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetDailyData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetProductSummaryData", ReplyAction="urn:SalesDataService/GetProductSummaryDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.ProductSummary[] GetProductSummaryData(ComponentArt.Win.Demos.SalesDataService.DateRange range);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetProductSummaryData", ReplyAction="urn:SalesDataService/GetProductSummaryDataResponse")]
        System.IAsyncResult BeginGetProductSummaryData(ComponentArt.Win.Demos.SalesDataService.DateRange range, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.ProductSummary[] EndGetProductSummaryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetDashboardData", ReplyAction="urn:SalesDataService/GetDashboardDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.DashboardData GetDashboardData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetDashboardData", ReplyAction="urn:SalesDataService/GetDashboardDataResponse")]
        System.IAsyncResult BeginGetDashboardData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.DashboardData EndGetDashboardData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetAllAuxiliaryData", ReplyAction="urn:SalesDataService/GetAllAuxiliaryDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetAllAuxiliaryData();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetAllAuxiliaryData", ReplyAction="urn:SalesDataService/GetAllAuxiliaryDataResponse")]
        System.IAsyncResult BeginGetAllAuxiliaryData(System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetAllAuxiliaryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetYearlyAuxiliaryData", ReplyAction="urn:SalesDataService/GetYearlyAuxiliaryDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyAuxiliaryData(System.DateTime year);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetYearlyAuxiliaryData", ReplyAction="urn:SalesDataService/GetYearlyAuxiliaryDataResponse")]
        System.IAsyncResult BeginGetYearlyAuxiliaryData(System.DateTime year, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyAuxiliaryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetYearlyAuxiliaryDataFromDecade", ReplyAction="urn:SalesDataService/GetYearlyAuxiliaryDataFromDecadeResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyAuxiliaryDataFromDecade(string decade);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetYearlyAuxiliaryDataFromDecade", ReplyAction="urn:SalesDataService/GetYearlyAuxiliaryDataFromDecadeResponse")]
        System.IAsyncResult BeginGetYearlyAuxiliaryDataFromDecade(string decade, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyAuxiliaryDataFromDecade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetMonthlyAuxiliaryData", ReplyAction="urn:SalesDataService/GetMonthlyAuxiliaryDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetMonthlyAuxiliaryData(System.DateTime year);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetMonthlyAuxiliaryData", ReplyAction="urn:SalesDataService/GetMonthlyAuxiliaryDataResponse")]
        System.IAsyncResult BeginGetMonthlyAuxiliaryData(System.DateTime year, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetMonthlyAuxiliaryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SalesDataService/GetDailyAuxiliaryData", ReplyAction="urn:SalesDataService/GetDailyAuxiliaryDataResponse")]
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetDailyAuxiliaryData(System.DateTime month);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:SalesDataService/GetDailyAuxiliaryData", ReplyAction="urn:SalesDataService/GetDailyAuxiliaryDataResponse")]
        System.IAsyncResult BeginGetDailyAuxiliaryData(System.DateTime month, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetDailyAuxiliaryData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SalesDataServiceChannel : ComponentArt.Win.Demos.SalesDataService.SalesDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetYearlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYearlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetYearlyDataFromDecadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYearlyDataFromDecadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMonthlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMonthlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDailyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDailyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetProductSummaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductSummaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.ProductSummary[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.ProductSummary[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDashboardDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDashboardDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.DashboardData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.DashboardData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllAuxiliaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAuxiliaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetYearlyAuxiliaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYearlyAuxiliaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetYearlyAuxiliaryDataFromDecadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYearlyAuxiliaryDataFromDecadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMonthlyAuxiliaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMonthlyAuxiliaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDailyAuxiliaryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDailyAuxiliaryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.Win.Demos.SalesDataService.SalesRecord[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SalesDataServiceClient : System.ServiceModel.ClientBase<ComponentArt.Win.Demos.SalesDataService.SalesDataService>, ComponentArt.Win.Demos.SalesDataService.SalesDataService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllDataDelegate;
        
        private EndOperationDelegate onEndGetAllDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYearlyDataDelegate;
        
        private EndOperationDelegate onEndGetYearlyDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetYearlyDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYearlyDataFromDecadeDelegate;
        
        private EndOperationDelegate onEndGetYearlyDataFromDecadeDelegate;
        
        private System.Threading.SendOrPostCallback onGetYearlyDataFromDecadeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMonthlyDataDelegate;
        
        private EndOperationDelegate onEndGetMonthlyDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMonthlyDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDailyDataDelegate;
        
        private EndOperationDelegate onEndGetDailyDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDailyDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductSummaryDataDelegate;
        
        private EndOperationDelegate onEndGetProductSummaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductSummaryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDashboardDataDelegate;
        
        private EndOperationDelegate onEndGetDashboardDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDashboardDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAuxiliaryDataDelegate;
        
        private EndOperationDelegate onEndGetAllAuxiliaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAuxiliaryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYearlyAuxiliaryDataDelegate;
        
        private EndOperationDelegate onEndGetYearlyAuxiliaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetYearlyAuxiliaryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYearlyAuxiliaryDataFromDecadeDelegate;
        
        private EndOperationDelegate onEndGetYearlyAuxiliaryDataFromDecadeDelegate;
        
        private System.Threading.SendOrPostCallback onGetYearlyAuxiliaryDataFromDecadeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMonthlyAuxiliaryDataDelegate;
        
        private EndOperationDelegate onEndGetMonthlyAuxiliaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMonthlyAuxiliaryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDailyAuxiliaryDataDelegate;
        
        private EndOperationDelegate onEndGetDailyAuxiliaryDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDailyAuxiliaryDataCompletedDelegate;
        
        public SalesDataServiceClient() {
        }
        
        public SalesDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetAllDataCompletedEventArgs> GetAllDataCompleted;
        
        public event System.EventHandler<GetYearlyDataCompletedEventArgs> GetYearlyDataCompleted;
        
        public event System.EventHandler<GetYearlyDataFromDecadeCompletedEventArgs> GetYearlyDataFromDecadeCompleted;
        
        public event System.EventHandler<GetMonthlyDataCompletedEventArgs> GetMonthlyDataCompleted;
        
        public event System.EventHandler<GetDailyDataCompletedEventArgs> GetDailyDataCompleted;
        
        public event System.EventHandler<GetProductSummaryDataCompletedEventArgs> GetProductSummaryDataCompleted;
        
        public event System.EventHandler<GetDashboardDataCompletedEventArgs> GetDashboardDataCompleted;
        
        public event System.EventHandler<GetAllAuxiliaryDataCompletedEventArgs> GetAllAuxiliaryDataCompleted;
        
        public event System.EventHandler<GetYearlyAuxiliaryDataCompletedEventArgs> GetYearlyAuxiliaryDataCompleted;
        
        public event System.EventHandler<GetYearlyAuxiliaryDataFromDecadeCompletedEventArgs> GetYearlyAuxiliaryDataFromDecadeCompleted;
        
        public event System.EventHandler<GetMonthlyAuxiliaryDataCompletedEventArgs> GetMonthlyAuxiliaryDataCompleted;
        
        public event System.EventHandler<GetDailyAuxiliaryDataCompletedEventArgs> GetDailyAuxiliaryDataCompleted;
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod) {
            return base.Channel.GetData(range, dataPointPeriod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(range, dataPointPeriod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ComponentArt.Win.Demos.SalesDataService.DateRange range = ((ComponentArt.Win.Demos.SalesDataService.DateRange)(inValues[0]));
            ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod = ((ComponentArt.Win.Demos.SalesDataService.TimePeriod)(inValues[1]));
            return this.BeginGetData(range, dataPointPeriod, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod) {
            this.GetDataAsync(range, dataPointPeriod, null);
        }
        
        public void GetDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        range,
                        dataPointPeriod}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] GetAllData() {
            return base.Channel.GetAllData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] EndGetAllData(System.IAsyncResult result) {
            return base.Channel.EndGetAllData(result);
        }
        
        private System.IAsyncResult OnBeginGetAllData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllData(callback, asyncState);
        }
        
        private object[] OnEndGetAllData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.StringSalesRecord[] retVal = this.EndGetAllData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllDataCompleted(object state) {
            if ((this.GetAllDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllDataCompleted(this, new GetAllDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllDataAsync() {
            this.GetAllDataAsync(null);
        }
        
        public void GetAllDataAsync(object userState) {
            if ((this.onBeginGetAllDataDelegate == null)) {
                this.onBeginGetAllDataDelegate = new BeginOperationDelegate(this.OnBeginGetAllData);
            }
            if ((this.onEndGetAllDataDelegate == null)) {
                this.onEndGetAllDataDelegate = new EndOperationDelegate(this.OnEndGetAllData);
            }
            if ((this.onGetAllDataCompletedDelegate == null)) {
                this.onGetAllDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllDataDelegate, null, this.onEndGetAllDataDelegate, this.onGetAllDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyData(System.DateTime year) {
            return base.Channel.GetYearlyData(year);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetYearlyData(System.DateTime year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYearlyData(year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyData(System.IAsyncResult result) {
            return base.Channel.EndGetYearlyData(result);
        }
        
        private System.IAsyncResult OnBeginGetYearlyData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime year = ((System.DateTime)(inValues[0]));
            return this.BeginGetYearlyData(year, callback, asyncState);
        }
        
        private object[] OnEndGetYearlyData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetYearlyData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYearlyDataCompleted(object state) {
            if ((this.GetYearlyDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYearlyDataCompleted(this, new GetYearlyDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYearlyDataAsync(System.DateTime year) {
            this.GetYearlyDataAsync(year, null);
        }
        
        public void GetYearlyDataAsync(System.DateTime year, object userState) {
            if ((this.onBeginGetYearlyDataDelegate == null)) {
                this.onBeginGetYearlyDataDelegate = new BeginOperationDelegate(this.OnBeginGetYearlyData);
            }
            if ((this.onEndGetYearlyDataDelegate == null)) {
                this.onEndGetYearlyDataDelegate = new EndOperationDelegate(this.OnEndGetYearlyData);
            }
            if ((this.onGetYearlyDataCompletedDelegate == null)) {
                this.onGetYearlyDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYearlyDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetYearlyDataDelegate, new object[] {
                        year}, this.onEndGetYearlyDataDelegate, this.onGetYearlyDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyDataFromDecade(string decade) {
            return base.Channel.GetYearlyDataFromDecade(decade);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetYearlyDataFromDecade(string decade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYearlyDataFromDecade(decade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyDataFromDecade(System.IAsyncResult result) {
            return base.Channel.EndGetYearlyDataFromDecade(result);
        }
        
        private System.IAsyncResult OnBeginGetYearlyDataFromDecade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string decade = ((string)(inValues[0]));
            return this.BeginGetYearlyDataFromDecade(decade, callback, asyncState);
        }
        
        private object[] OnEndGetYearlyDataFromDecade(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetYearlyDataFromDecade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYearlyDataFromDecadeCompleted(object state) {
            if ((this.GetYearlyDataFromDecadeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYearlyDataFromDecadeCompleted(this, new GetYearlyDataFromDecadeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYearlyDataFromDecadeAsync(string decade) {
            this.GetYearlyDataFromDecadeAsync(decade, null);
        }
        
        public void GetYearlyDataFromDecadeAsync(string decade, object userState) {
            if ((this.onBeginGetYearlyDataFromDecadeDelegate == null)) {
                this.onBeginGetYearlyDataFromDecadeDelegate = new BeginOperationDelegate(this.OnBeginGetYearlyDataFromDecade);
            }
            if ((this.onEndGetYearlyDataFromDecadeDelegate == null)) {
                this.onEndGetYearlyDataFromDecadeDelegate = new EndOperationDelegate(this.OnEndGetYearlyDataFromDecade);
            }
            if ((this.onGetYearlyDataFromDecadeCompletedDelegate == null)) {
                this.onGetYearlyDataFromDecadeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYearlyDataFromDecadeCompleted);
            }
            base.InvokeAsync(this.onBeginGetYearlyDataFromDecadeDelegate, new object[] {
                        decade}, this.onEndGetYearlyDataFromDecadeDelegate, this.onGetYearlyDataFromDecadeCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetMonthlyData(System.DateTime year) {
            return base.Channel.GetMonthlyData(year);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMonthlyData(System.DateTime year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMonthlyData(year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetMonthlyData(System.IAsyncResult result) {
            return base.Channel.EndGetMonthlyData(result);
        }
        
        private System.IAsyncResult OnBeginGetMonthlyData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime year = ((System.DateTime)(inValues[0]));
            return this.BeginGetMonthlyData(year, callback, asyncState);
        }
        
        private object[] OnEndGetMonthlyData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetMonthlyData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMonthlyDataCompleted(object state) {
            if ((this.GetMonthlyDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMonthlyDataCompleted(this, new GetMonthlyDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMonthlyDataAsync(System.DateTime year) {
            this.GetMonthlyDataAsync(year, null);
        }
        
        public void GetMonthlyDataAsync(System.DateTime year, object userState) {
            if ((this.onBeginGetMonthlyDataDelegate == null)) {
                this.onBeginGetMonthlyDataDelegate = new BeginOperationDelegate(this.OnBeginGetMonthlyData);
            }
            if ((this.onEndGetMonthlyDataDelegate == null)) {
                this.onEndGetMonthlyDataDelegate = new EndOperationDelegate(this.OnEndGetMonthlyData);
            }
            if ((this.onGetMonthlyDataCompletedDelegate == null)) {
                this.onGetMonthlyDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMonthlyDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMonthlyDataDelegate, new object[] {
                        year}, this.onEndGetMonthlyDataDelegate, this.onGetMonthlyDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetDailyData(System.DateTime month) {
            return base.Channel.GetDailyData(month);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDailyData(System.DateTime month, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDailyData(month, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetDailyData(System.IAsyncResult result) {
            return base.Channel.EndGetDailyData(result);
        }
        
        private System.IAsyncResult OnBeginGetDailyData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime month = ((System.DateTime)(inValues[0]));
            return this.BeginGetDailyData(month, callback, asyncState);
        }
        
        private object[] OnEndGetDailyData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetDailyData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDailyDataCompleted(object state) {
            if ((this.GetDailyDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDailyDataCompleted(this, new GetDailyDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDailyDataAsync(System.DateTime month) {
            this.GetDailyDataAsync(month, null);
        }
        
        public void GetDailyDataAsync(System.DateTime month, object userState) {
            if ((this.onBeginGetDailyDataDelegate == null)) {
                this.onBeginGetDailyDataDelegate = new BeginOperationDelegate(this.OnBeginGetDailyData);
            }
            if ((this.onEndGetDailyDataDelegate == null)) {
                this.onEndGetDailyDataDelegate = new EndOperationDelegate(this.OnEndGetDailyData);
            }
            if ((this.onGetDailyDataCompletedDelegate == null)) {
                this.onGetDailyDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDailyDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDailyDataDelegate, new object[] {
                        month}, this.onEndGetDailyDataDelegate, this.onGetDailyDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.ProductSummary[] GetProductSummaryData(ComponentArt.Win.Demos.SalesDataService.DateRange range) {
            return base.Channel.GetProductSummaryData(range);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProductSummaryData(ComponentArt.Win.Demos.SalesDataService.DateRange range, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductSummaryData(range, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.ProductSummary[] EndGetProductSummaryData(System.IAsyncResult result) {
            return base.Channel.EndGetProductSummaryData(result);
        }
        
        private System.IAsyncResult OnBeginGetProductSummaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ComponentArt.Win.Demos.SalesDataService.DateRange range = ((ComponentArt.Win.Demos.SalesDataService.DateRange)(inValues[0]));
            return this.BeginGetProductSummaryData(range, callback, asyncState);
        }
        
        private object[] OnEndGetProductSummaryData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.ProductSummary[] retVal = this.EndGetProductSummaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductSummaryDataCompleted(object state) {
            if ((this.GetProductSummaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductSummaryDataCompleted(this, new GetProductSummaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductSummaryDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range) {
            this.GetProductSummaryDataAsync(range, null);
        }
        
        public void GetProductSummaryDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range, object userState) {
            if ((this.onBeginGetProductSummaryDataDelegate == null)) {
                this.onBeginGetProductSummaryDataDelegate = new BeginOperationDelegate(this.OnBeginGetProductSummaryData);
            }
            if ((this.onEndGetProductSummaryDataDelegate == null)) {
                this.onEndGetProductSummaryDataDelegate = new EndOperationDelegate(this.OnEndGetProductSummaryData);
            }
            if ((this.onGetProductSummaryDataCompletedDelegate == null)) {
                this.onGetProductSummaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductSummaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductSummaryDataDelegate, new object[] {
                        range}, this.onEndGetProductSummaryDataDelegate, this.onGetProductSummaryDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.DashboardData GetDashboardData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod) {
            return base.Channel.GetDashboardData(range, dataPointPeriod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDashboardData(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDashboardData(range, dataPointPeriod, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.DashboardData EndGetDashboardData(System.IAsyncResult result) {
            return base.Channel.EndGetDashboardData(result);
        }
        
        private System.IAsyncResult OnBeginGetDashboardData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ComponentArt.Win.Demos.SalesDataService.DateRange range = ((ComponentArt.Win.Demos.SalesDataService.DateRange)(inValues[0]));
            ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod = ((ComponentArt.Win.Demos.SalesDataService.TimePeriod)(inValues[1]));
            return this.BeginGetDashboardData(range, dataPointPeriod, callback, asyncState);
        }
        
        private object[] OnEndGetDashboardData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.DashboardData retVal = this.EndGetDashboardData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDashboardDataCompleted(object state) {
            if ((this.GetDashboardDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDashboardDataCompleted(this, new GetDashboardDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDashboardDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod) {
            this.GetDashboardDataAsync(range, dataPointPeriod, null);
        }
        
        public void GetDashboardDataAsync(ComponentArt.Win.Demos.SalesDataService.DateRange range, ComponentArt.Win.Demos.SalesDataService.TimePeriod dataPointPeriod, object userState) {
            if ((this.onBeginGetDashboardDataDelegate == null)) {
                this.onBeginGetDashboardDataDelegate = new BeginOperationDelegate(this.OnBeginGetDashboardData);
            }
            if ((this.onEndGetDashboardDataDelegate == null)) {
                this.onEndGetDashboardDataDelegate = new EndOperationDelegate(this.OnEndGetDashboardData);
            }
            if ((this.onGetDashboardDataCompletedDelegate == null)) {
                this.onGetDashboardDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDashboardDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDashboardDataDelegate, new object[] {
                        range,
                        dataPointPeriod}, this.onEndGetDashboardDataDelegate, this.onGetDashboardDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetAllAuxiliaryData() {
            return base.Channel.GetAllAuxiliaryData();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllAuxiliaryData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAuxiliaryData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetAllAuxiliaryData(System.IAsyncResult result) {
            return base.Channel.EndGetAllAuxiliaryData(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAuxiliaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllAuxiliaryData(callback, asyncState);
        }
        
        private object[] OnEndGetAllAuxiliaryData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetAllAuxiliaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAuxiliaryDataCompleted(object state) {
            if ((this.GetAllAuxiliaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAuxiliaryDataCompleted(this, new GetAllAuxiliaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAuxiliaryDataAsync() {
            this.GetAllAuxiliaryDataAsync(null);
        }
        
        public void GetAllAuxiliaryDataAsync(object userState) {
            if ((this.onBeginGetAllAuxiliaryDataDelegate == null)) {
                this.onBeginGetAllAuxiliaryDataDelegate = new BeginOperationDelegate(this.OnBeginGetAllAuxiliaryData);
            }
            if ((this.onEndGetAllAuxiliaryDataDelegate == null)) {
                this.onEndGetAllAuxiliaryDataDelegate = new EndOperationDelegate(this.OnEndGetAllAuxiliaryData);
            }
            if ((this.onGetAllAuxiliaryDataCompletedDelegate == null)) {
                this.onGetAllAuxiliaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAuxiliaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAuxiliaryDataDelegate, null, this.onEndGetAllAuxiliaryDataDelegate, this.onGetAllAuxiliaryDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyAuxiliaryData(System.DateTime year) {
            return base.Channel.GetYearlyAuxiliaryData(year);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetYearlyAuxiliaryData(System.DateTime year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYearlyAuxiliaryData(year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyAuxiliaryData(System.IAsyncResult result) {
            return base.Channel.EndGetYearlyAuxiliaryData(result);
        }
        
        private System.IAsyncResult OnBeginGetYearlyAuxiliaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime year = ((System.DateTime)(inValues[0]));
            return this.BeginGetYearlyAuxiliaryData(year, callback, asyncState);
        }
        
        private object[] OnEndGetYearlyAuxiliaryData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetYearlyAuxiliaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYearlyAuxiliaryDataCompleted(object state) {
            if ((this.GetYearlyAuxiliaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYearlyAuxiliaryDataCompleted(this, new GetYearlyAuxiliaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYearlyAuxiliaryDataAsync(System.DateTime year) {
            this.GetYearlyAuxiliaryDataAsync(year, null);
        }
        
        public void GetYearlyAuxiliaryDataAsync(System.DateTime year, object userState) {
            if ((this.onBeginGetYearlyAuxiliaryDataDelegate == null)) {
                this.onBeginGetYearlyAuxiliaryDataDelegate = new BeginOperationDelegate(this.OnBeginGetYearlyAuxiliaryData);
            }
            if ((this.onEndGetYearlyAuxiliaryDataDelegate == null)) {
                this.onEndGetYearlyAuxiliaryDataDelegate = new EndOperationDelegate(this.OnEndGetYearlyAuxiliaryData);
            }
            if ((this.onGetYearlyAuxiliaryDataCompletedDelegate == null)) {
                this.onGetYearlyAuxiliaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYearlyAuxiliaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetYearlyAuxiliaryDataDelegate, new object[] {
                        year}, this.onEndGetYearlyAuxiliaryDataDelegate, this.onGetYearlyAuxiliaryDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetYearlyAuxiliaryDataFromDecade(string decade) {
            return base.Channel.GetYearlyAuxiliaryDataFromDecade(decade);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetYearlyAuxiliaryDataFromDecade(string decade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYearlyAuxiliaryDataFromDecade(decade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetYearlyAuxiliaryDataFromDecade(System.IAsyncResult result) {
            return base.Channel.EndGetYearlyAuxiliaryDataFromDecade(result);
        }
        
        private System.IAsyncResult OnBeginGetYearlyAuxiliaryDataFromDecade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string decade = ((string)(inValues[0]));
            return this.BeginGetYearlyAuxiliaryDataFromDecade(decade, callback, asyncState);
        }
        
        private object[] OnEndGetYearlyAuxiliaryDataFromDecade(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetYearlyAuxiliaryDataFromDecade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYearlyAuxiliaryDataFromDecadeCompleted(object state) {
            if ((this.GetYearlyAuxiliaryDataFromDecadeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYearlyAuxiliaryDataFromDecadeCompleted(this, new GetYearlyAuxiliaryDataFromDecadeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYearlyAuxiliaryDataFromDecadeAsync(string decade) {
            this.GetYearlyAuxiliaryDataFromDecadeAsync(decade, null);
        }
        
        public void GetYearlyAuxiliaryDataFromDecadeAsync(string decade, object userState) {
            if ((this.onBeginGetYearlyAuxiliaryDataFromDecadeDelegate == null)) {
                this.onBeginGetYearlyAuxiliaryDataFromDecadeDelegate = new BeginOperationDelegate(this.OnBeginGetYearlyAuxiliaryDataFromDecade);
            }
            if ((this.onEndGetYearlyAuxiliaryDataFromDecadeDelegate == null)) {
                this.onEndGetYearlyAuxiliaryDataFromDecadeDelegate = new EndOperationDelegate(this.OnEndGetYearlyAuxiliaryDataFromDecade);
            }
            if ((this.onGetYearlyAuxiliaryDataFromDecadeCompletedDelegate == null)) {
                this.onGetYearlyAuxiliaryDataFromDecadeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYearlyAuxiliaryDataFromDecadeCompleted);
            }
            base.InvokeAsync(this.onBeginGetYearlyAuxiliaryDataFromDecadeDelegate, new object[] {
                        decade}, this.onEndGetYearlyAuxiliaryDataFromDecadeDelegate, this.onGetYearlyAuxiliaryDataFromDecadeCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetMonthlyAuxiliaryData(System.DateTime year) {
            return base.Channel.GetMonthlyAuxiliaryData(year);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMonthlyAuxiliaryData(System.DateTime year, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMonthlyAuxiliaryData(year, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetMonthlyAuxiliaryData(System.IAsyncResult result) {
            return base.Channel.EndGetMonthlyAuxiliaryData(result);
        }
        
        private System.IAsyncResult OnBeginGetMonthlyAuxiliaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime year = ((System.DateTime)(inValues[0]));
            return this.BeginGetMonthlyAuxiliaryData(year, callback, asyncState);
        }
        
        private object[] OnEndGetMonthlyAuxiliaryData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetMonthlyAuxiliaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMonthlyAuxiliaryDataCompleted(object state) {
            if ((this.GetMonthlyAuxiliaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMonthlyAuxiliaryDataCompleted(this, new GetMonthlyAuxiliaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMonthlyAuxiliaryDataAsync(System.DateTime year) {
            this.GetMonthlyAuxiliaryDataAsync(year, null);
        }
        
        public void GetMonthlyAuxiliaryDataAsync(System.DateTime year, object userState) {
            if ((this.onBeginGetMonthlyAuxiliaryDataDelegate == null)) {
                this.onBeginGetMonthlyAuxiliaryDataDelegate = new BeginOperationDelegate(this.OnBeginGetMonthlyAuxiliaryData);
            }
            if ((this.onEndGetMonthlyAuxiliaryDataDelegate == null)) {
                this.onEndGetMonthlyAuxiliaryDataDelegate = new EndOperationDelegate(this.OnEndGetMonthlyAuxiliaryData);
            }
            if ((this.onGetMonthlyAuxiliaryDataCompletedDelegate == null)) {
                this.onGetMonthlyAuxiliaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMonthlyAuxiliaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMonthlyAuxiliaryDataDelegate, new object[] {
                        year}, this.onEndGetMonthlyAuxiliaryDataDelegate, this.onGetMonthlyAuxiliaryDataCompletedDelegate, userState);
        }
        
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] GetDailyAuxiliaryData(System.DateTime month) {
            return base.Channel.GetDailyAuxiliaryData(month);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDailyAuxiliaryData(System.DateTime month, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDailyAuxiliaryData(month, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ComponentArt.Win.Demos.SalesDataService.SalesRecord[] EndGetDailyAuxiliaryData(System.IAsyncResult result) {
            return base.Channel.EndGetDailyAuxiliaryData(result);
        }
        
        private System.IAsyncResult OnBeginGetDailyAuxiliaryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime month = ((System.DateTime)(inValues[0]));
            return this.BeginGetDailyAuxiliaryData(month, callback, asyncState);
        }
        
        private object[] OnEndGetDailyAuxiliaryData(System.IAsyncResult result) {
            ComponentArt.Win.Demos.SalesDataService.SalesRecord[] retVal = this.EndGetDailyAuxiliaryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDailyAuxiliaryDataCompleted(object state) {
            if ((this.GetDailyAuxiliaryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDailyAuxiliaryDataCompleted(this, new GetDailyAuxiliaryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDailyAuxiliaryDataAsync(System.DateTime month) {
            this.GetDailyAuxiliaryDataAsync(month, null);
        }
        
        public void GetDailyAuxiliaryDataAsync(System.DateTime month, object userState) {
            if ((this.onBeginGetDailyAuxiliaryDataDelegate == null)) {
                this.onBeginGetDailyAuxiliaryDataDelegate = new BeginOperationDelegate(this.OnBeginGetDailyAuxiliaryData);
            }
            if ((this.onEndGetDailyAuxiliaryDataDelegate == null)) {
                this.onEndGetDailyAuxiliaryDataDelegate = new EndOperationDelegate(this.OnEndGetDailyAuxiliaryData);
            }
            if ((this.onGetDailyAuxiliaryDataCompletedDelegate == null)) {
                this.onGetDailyAuxiliaryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDailyAuxiliaryDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDailyAuxiliaryDataDelegate, new object[] {
                        month}, this.onEndGetDailyAuxiliaryDataDelegate, this.onGetDailyAuxiliaryDataCompletedDelegate, userState);
        }
    }
}
