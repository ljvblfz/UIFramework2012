//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace ComponentArt.Silverlight.Demos.NavBarService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ComponentArt.SOA.UI", ConfigurationName="NavBarService.ISoaNavBarService")]
    public interface ISoaNavBarService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ComponentArt.SOA.UI/ISoaNavBarService/GetItems", ReplyAction="ComponentArt.SOA.UI/ISoaNavBarService/GetItemsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ComponentArt.SOA.UI.SoaNavBarRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ComponentArt.SOA.UI.SoaNavBarItem>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ComponentArt.SOA.UI.SoaNavBarGetItemsResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ComponentArt.SOA.UI.SoaNavBarResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ComponentArt.SOA.UI.SoaNavBar))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest))]
        System.IAsyncResult BeginGetItems(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request, System.AsyncCallback callback, object asyncState);
        
        ComponentArt.SOA.UI.SoaNavBarGetItemsResponse EndGetItems(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ISoaNavBarServiceChannel : ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ComponentArt.SOA.UI.SoaNavBarGetItemsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ComponentArt.SOA.UI.SoaNavBarGetItemsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SoaNavBarServiceClient : System.ServiceModel.ClientBase<ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService>, ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService {
        
        private BeginOperationDelegate onBeginGetItemsDelegate;
        
        private EndOperationDelegate onEndGetItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SoaNavBarServiceClient() {
        }
        
        public SoaNavBarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoaNavBarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoaNavBarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoaNavBarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetItemsCompletedEventArgs> GetItemsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService.BeginGetItems(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItems(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ComponentArt.SOA.UI.SoaNavBarGetItemsResponse ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService.EndGetItems(System.IAsyncResult result) {
            return base.Channel.EndGetItems(result);
        }
        
        private System.IAsyncResult OnBeginGetItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request = ((ComponentArt.SOA.UI.SoaNavBarGetItemsRequest)(inValues[0]));
            return ((ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService)(this)).BeginGetItems(request, callback, asyncState);
        }
        
        private object[] OnEndGetItems(System.IAsyncResult result) {
            ComponentArt.SOA.UI.SoaNavBarGetItemsResponse retVal = ((ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService)(this)).EndGetItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsCompleted(object state) {
            if ((this.GetItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsCompleted(this, new GetItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsAsync(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request) {
            this.GetItemsAsync(request, null);
        }
        
        public void GetItemsAsync(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request, object userState) {
            if ((this.onBeginGetItemsDelegate == null)) {
                this.onBeginGetItemsDelegate = new BeginOperationDelegate(this.OnBeginGetItems);
            }
            if ((this.onEndGetItemsDelegate == null)) {
                this.onEndGetItemsDelegate = new EndOperationDelegate(this.OnEndGetItems);
            }
            if ((this.onGetItemsCompletedDelegate == null)) {
                this.onGetItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsDelegate, new object[] {
                        request}, this.onEndGetItemsDelegate, this.onGetItemsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService CreateChannel() {
            return new SoaNavBarServiceClientChannel(this);
        }
        
        private class SoaNavBarServiceClientChannel : ChannelBase<ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService>, ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService {
            
            public SoaNavBarServiceClientChannel(System.ServiceModel.ClientBase<ComponentArt.Silverlight.Demos.NavBarService.ISoaNavBarService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetItems(ComponentArt.SOA.UI.SoaNavBarGetItemsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetItems", _args, callback, asyncState);
                return _result;
            }
            
            public ComponentArt.SOA.UI.SoaNavBarGetItemsResponse EndGetItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                ComponentArt.SOA.UI.SoaNavBarGetItemsResponse _result = ((ComponentArt.SOA.UI.SoaNavBarGetItemsResponse)(base.EndInvoke("GetItems", _args, result)));
                return _result;
            }
        }
    }
}
